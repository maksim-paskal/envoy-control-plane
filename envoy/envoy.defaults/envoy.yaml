cluster_manager:
  local_cluster_name: {{ env "ENVOY_SERVICE_NAME" }}

overload_manager:
  resource_monitors:
  - name: "envoy.resource_monitors.global_downstream_max_connections"
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig
      max_active_downstream_connections: 50000

layered_runtime:
  layers:
  - name: static_layer_0
    static_layer:
      envoy.deprecated_features:envoy.config.bootstrap.v3.Bootstrap.tracing: true
      re2.max_program_size.error_level: 1000
      re2.max_program_size.warn_level: 1000
      upstream:
        zone_routing:
          min_cluster_size: 1

dynamic_resources:
  lds_config:
    resource_api_version: V3
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      grpc_services:
      - envoy_grpc:
          cluster_name: xds_cluster
      #set_node_on_first_message_only: true
  cds_config:
    resource_api_version: V3
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      grpc_services:
      - envoy_grpc:
          cluster_name: xds_cluster

static_resources:
  listeners:
  - name: envoy_healthcheck
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 18001
    traffic_direction: INBOUND
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: envoy_healthcheck
          route_config:
            name: envoy_healthcheck
            virtual_hosts:
            - name: envoy_healthcheck
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: envoy_admin_cluster
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: {{ env "ENVOY_SERVICE_NAME" }}
    connect_timeout: 0.25s
    lb_policy: ROUND_ROBIN
    type: EDS
    eds_cluster_config:
      eds_config:
        resource_api_version: V3
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
          - envoy_grpc:
              cluster_name: xds_cluster
  - name: opentelemetry_collector
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: opentelemetry_collector
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ env "OTLP_COLLECTOR_HOST" }}
                port_value: {{ env "OTLP_COLLECTOR_PORT" }}
  - name: xds_cluster
    connect_timeout: 1s
    type: {{ env "XDS_CLUSTER_TYPE" }}
    dns_lookup_family: V4_ONLY
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options:
            connection_keepalive:
              interval: 30s
              timeout: 5s
    upstream_connection_options:
      # configure a TCP keep-alive to detect and reconnect to the admin
      # server in the event of a TCP socket half open connection
      tcp_keepalive: {}
    health_checks:
    - timeout: 1s
      interval: 5s
      unhealthy_threshold: 3
      healthy_threshold: 1
      http_health_check:
        path: "/api/healthz"
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: /certs/CA.crt
          tls_certificates:
          - certificate_chain:
              filename: /certs/envoy.crt
            private_key:
              filename: /certs/envoy.key
    load_assignment:
      cluster_name: xds_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            health_check_config:
              port_value: 18081
            address:
              socket_address:
                address: {{ env "XDS_CLUSTER_ADDRESS" }}
                port_value: 18080
  - name: envoy_admin_cluster
    connect_timeout: 1s
    type: STATIC
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: envoy_admin_cluster
      endpoints:
      - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 127.0.0.1
                  port_value: 18000

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 18000

tracing:
  http:
    name: envoy.tracers.opentelemetry
    typed_config:
      "@type": type.googleapis.com/envoy.config.trace.v3.OpenTelemetryConfig
      grpc_service:
        envoy_grpc:
          cluster_name: opentelemetry_collector
        timeout: 0.250s
      service_name: {{ env "ENVOY_SERVICE_NAME" }}
