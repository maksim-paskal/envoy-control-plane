apiVersion: v1
kind: ConfigMap
metadata:
  name: test2-id
  namespace: default
  labels:
    app: envoy-control-plane
    version: v1
data:
  test2-id: |-
    validation:
      match_subject_alt_names:
      - exact: "test1-id"
      - exact: "test"
    clusters:
    - name: some_service
      connect_timeout: 0.25s
      type: STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: some_service
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 127.0.0.1
                  port_value: 1234
    listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
      traffic_direction: INBOUND
      reuse_port: true
      filter_chains:
      - transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
            require_client_certificate: true
            common_tls_context:
              validation_context_sds_secret_config:
                name: validation
                sds_config:
                  resource_api_version: V3
                  api_config_source:
                    api_type: GRPC
                    transport_api_version: V3
                    grpc_services:
                    - envoy_grpc:
                        cluster_name: xds_cluster
              tls_certificate_sds_secret_configs:
              - name: envoy_control_plane_default
                sds_config:
                  resource_api_version: V3
                  api_config_source:
                    api_type: GRPC
                    transport_api_version: V3
                    grpc_services:
                    - envoy_grpc:
                        cluster_name: xds_cluster
        filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: ingress_http
            codec_type: AUTO
            stream_error_on_invalid_http_message: true
            tracing: {}
            access_log:
            - name: envoy.access_loggers.file
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: /dev/stdout
                log_format:
                  json_format:
                    protocol: "%PROTOCOL%"
                    duration: "%DURATION%"
                    response_code: "%RESPONSE_CODE%"
                    response_flags: "%RESPONSE_FLAGS%"
                    x_request_id: "%REQ(X-REQUEST-ID)%"
            route_config:
              name: ingress
              virtual_hosts:
              - name: backend
                domains:
                - "*"
                routes:
                - match:
                    prefix: "/"
                  direct_response:
                    status: "200"
                    body:
                      inline_string: "Hello World2"
            http_filters:
            - name: envoy.filters.http.router