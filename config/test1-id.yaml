apiVersion: v1
kind: ConfigMap
metadata:
  name: test-envoy
  namespace: default
  labels:
    app: envoy-control-plane
    version: v1
data:
  test1-id: |-
    kubernetes:
    - cluster_name: local_service1
      port: 80
      selector:
        app: test-001

    - cluster_name: test-envoy-service
      port: 80
      selector:
        app: test-002
    endpoints:
    - cluster_name: local_service1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8000
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.2
                port_value: 8000
    listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8000
      filter_chains:
      - filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: ingress_http
            codec_type: AUTO
            tracing: {}
            access_log:
            - name: envoy.access_loggers.file
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: /dev/stdout
                log_format:
                  json_format:
                    protocol: "%PROTOCOL%"
                    duration: "%DURATION%"
                    response_code: "%RESPONSE_CODE%"
                    response_flags: "%RESPONSE_FLAGS%"
                    x_request_id: "%REQ(X-REQUEST-ID)%"
            rds:
              route_config_name: test
              config_source:
                resource_api_version: V3
                api_config_source:
                  api_type: GRPC
                  transport_api_version: V3
                  grpc_services:
                  - envoy_grpc:
                      cluster_name: xds_cluster
            http_filters:
            - name: envoy.filters.http.ratelimit
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                domain: test
                failure_mode_deny: true
                rate_limit_service:
                  grpc_service:
                    envoy_grpc:
                      cluster_name: rate_limit_cluster
            - name: envoy.filters.http.router
    routes:
    - name: test
      virtual_hosts:
      - name: test
        domains:
        - "*"
        rate_limits:
        - actions:
          - header_value_match:
              descriptor_value: no-cf-connecting-ip
              expect_match: false
              headers:
              - name: "cf-connecting-ip"
        - actions:
          - request_headers:
              header_name: cf-connecting-ip
              descriptor_key: cf-connecting-ip
        routes:
        - match:
            prefix: "/1"
          route:
            cluster: local_service1
        - match:
            prefix: "/2"
          route:
            cluster: local_service2
        - match:
            prefix: "/"
          route:
            weighted_clusters:
              clusters:
              - name: local_service1
                weight: 50
              - name: local_service2
                weight: 50
    clusters:
    - name: local_service1
      connect_timeout: 0.25s
      lb_policy: ROUND_ROBIN
      type: EDS
      eds_cluster_config:
        eds_config:
          resource_api_version: V3
          api_config_source:
            api_type: GRPC
            transport_api_version: V3
            grpc_services:
            - envoy_grpc:
                cluster_name: xds_cluster
    - name: local_service2
      connect_timeout: 0.25s
      lb_policy: ROUND_ROBIN
      type: STRICT_DNS
      circuit_breakers:
        thresholds:
        - max_connections: 1
          max_pending_requests: 1
          max_requests: 1
      load_assignment:
        cluster_name: local_service2
        endpoints:
        - locality:
            zone: us-east-1a
          lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: nginxdemo-a
                  port_value: 80
        - locality:
            zone: us-east-1b
          lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: nginxdemo-b
                  port_value: 80
    - name: rate_limit_cluster
      connect_timeout: 0.25s
      lb_policy: ROUND_ROBIN
      type: STRICT_DNS
      http2_protocol_options: {}
      load_assignment:
        cluster_name: rate_limit_cluster
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: ratelimit
                  port_value: 8081