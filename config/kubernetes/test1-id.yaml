apiVersion: v1
kind: ConfigMap
metadata:
  name: test-envoy
  namespace: default
  labels:
    app: envoy-control-plane
    force-update: v2
data:
  test1-id.yaml: |-
    listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
      filter_chains:
      - filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
            stat_prefix: ingress_http
            codec_type: AUTO
            tracing:
              provider:
                name: envoy.tracers.dynamic_ot
                typed_config:
                  "@type": type.googleapis.com/envoy.config.trace.v2.DynamicOtConfig
                  library: /usr/local/lib/libjaegertracing_plugin.so
                  config:
                    service_name: front-proxy
                    sampler:
                      type: const
                      param: 1
                    reporter:
                      localAgentHostPort: jaeger:6831
                    headers:
                      jaegerDebugHeader: jaeger-debug-id
                      jaegerBaggageHeader: jaeger-baggage
                      traceBaggageHeaderPrefix: uberctx-
                    baggage_restrictions:
                      denyBaggageOnInitializationFailure: false
                      hostPort: ""
            access_log:
            - name: envoy.access_loggers.http_grpc
              typed_config:
                "@type": type.googleapis.com/envoy.config.accesslog.v2.HttpGrpcAccessLogConfig
                common_config:
                  log_name: "test"
                  grpc_service:
                    envoy_grpc:
                      cluster_name: xds_cluster
            - name: envoy.access_loggers.file
              typed_config:
                "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
                path: /dev/stdout
                json_format:
                  protocol: "%PROTOCOL%"
                  duration: "%DURATION%"
                  response_code: "%RESPONSE_CODE%"
                  response_flags: "%RESPONSE_FLAGS%"
                  x_request_id: "%REQ(X-REQUEST-ID)%"
            rds:
              route_config_name: test
              config_source:
                api_config_source:
                  api_type: GRPC
                  grpc_services:
                  - envoy_grpc:
                      cluster_name: xds_cluster
            http_filters:
            - name: envoy.filters.http.router
    endpoints:
    - cluster_name: local_service1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8000
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.2
                port_value: 8000
    routes:
    - name: test
      virtual_hosts:
      - name: test
        domains:
        - "*"
        routes:
        - match:
            prefix: "/4"
          route:
            cluster: local_service4
        - match:
            prefix: "/1"
          route:
            cluster: local_service1
        - match:
            prefix: "/"
          route:
            weighted_clusters:
              clusters:
              - name: local_service1
                weight: 50
              - name: local_service2
                weight: 50
    clusters:
    - name: local_service1
      connect_timeout: 0.25s
      lb_policy: ROUND_ROBIN
      type: EDS
      eds_cluster_config:
        eds_config:
          api_config_source:
            api_type: GRPC
            grpc_services:
            - envoy_grpc:
                cluster_name: xds_cluster
    - name: local_service2
      connect_timeout: 0.25s
      lb_policy: ROUND_ROBIN
      type: STRICT_DNS
      load_assignment:
        cluster_name: local_service2
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: nginxdemo
                  port_value: 80
    - name: local_service3
      connect_timeout: 0.25s
      lb_policy: ROUND_ROBIN
      type: STRICT_DNS
      load_assignment:
        cluster_name: local_service3
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: nginxdemo
                  port_value: 80
    - name: local_service4
      connect_timeout: 0.25s
      lb_policy: ROUND_ROBIN
      type: STRICT_DNS
      load_assignment:
        cluster_name: local_service3
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: nginxdemo
                  port_value: 80