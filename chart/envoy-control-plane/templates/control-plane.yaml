apiVersion: v1
kind: ServiceAccount
metadata:
  name: envoy-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: envoy-control-plane-role
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get","list","watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: envoy-control-plane
roleRef:
  kind: Role
  name: envoy-control-plane-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: envoy-control-plane
  namespace: {{ .Release.Namespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: envoy-control-plane-role
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: envoy-control-plane
roleRef:
  kind: ClusterRole
  name: envoy-control-plane-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: envoy-control-plane
  namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-control-plane
  labels:
    app: envoy-control-plane
spec:
  selector:
    matchLabels:
      app: envoy-control-plane
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/path: '/api/metrics'
        prometheus.io/scrape: 'true'
        prometheus.io/port: '18081'
      labels:
        app: envoy-control-plane
    spec:
      serviceAccountName: envoy-control-plane
      volumes:
      - name: certs
        configMap:
          name: envoy-control-plane-certs
      containers:
      - name: envoy-control-plane
        image: {{ .Values.registry.image | quote }}
        imagePullPolicy: {{ .Values.registry.imagePullPolicy | quote }}
        env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        command:
        - /app/envoy-control-plane
        - -ssl.crt=/certs/CA.crt
        - -ssl.key=/certs/CA.key
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
        readinessProbe:
          httpGet:
            path: /api/ready
            port: 18081
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/healthz
            port: 18081
          initialDelaySeconds: 10
          periodSeconds: 10
        ports:
        - containerPort: 18080
        - containerPort: 18081
        volumeMounts:
        - name: certs
          mountPath: /certs
---
apiVersion: v1
kind: Service
metadata:
  name: envoy-control-plane
  labels:
    app: envoy-control-plane
spec:
  type: ClusterIP
  ports:
  - name: xds
    port: 18080
    protocol: TCP
  - name: http
    port: 18081
    protocol: TCP
  selector:
    app: envoy-control-plane