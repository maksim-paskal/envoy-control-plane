apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-control-plane
  labels:
    app: envoy-control-plane
spec:
  selector:
    matchLabels:
      app: envoy-control-plane
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      annotations:
        checksum/certificates: {{ include (print $.Template.BasePath "/certificates.yaml") . | sha256sum }}
      {{- if .Values.metrics.enabled }}
        prometheus.io/path: '/api/metrics'
        prometheus.io/scrape: 'true'
        prometheus.io/port: '18082'
      {{- end }}
      labels:
        app: envoy-control-plane
    spec:
      serviceAccountName: envoy-control-plane
      volumes:
      - name: certs
        configMap:
          name: envoy-control-plane-certs
      {{ include "envoy-control-plane.pod.extraSpecs" . | nindent 6 }}
      containers:
      - name: envoy-control-plane
        image: {{ printf "%s/%s:%s" (default .Values.image.registry .Values.global.imageRegistry) .Values.image.repository .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 30001
          runAsGroup: 30001
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
{{- if .Values.env }}
{{ toYaml .Values.env | indent 8 }}
{{- end }}
        command:
        - /app/envoy-control-plane
        - -ssl.crt=/certs/CA.crt
        - -ssl.key=/certs/CA.key
{{- if .Values.args }}
{{ toYaml .Values.args | indent 8 }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 9 }}
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /api/metrics
            port: 18082
          initialDelaySeconds: 60
          periodSeconds: 10
        ports:
        - containerPort: 18080
        - containerPort: 18081
        - containerPort: 18082
        volumeMounts:
        - name: certs
          mountPath: /certs
