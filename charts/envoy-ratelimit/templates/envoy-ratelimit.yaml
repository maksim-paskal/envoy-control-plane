apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-ratelimit
  labels:
    app: envoy-ratelimit
data:
  config.yaml: |-
{{- .Values.config| toYaml | nindent 5 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-ratelimit
  labels:
    app: envoy-ratelimit
spec:
  selector:
    matchLabels:
      app: envoy-ratelimit
  replicas: 1
  template:
    metadata:
      labels:
        app: envoy-ratelimit
      {{- if or .Values.global.metrics.enabled .Values.metrics.enabled }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9102"
      {{- end }}
    spec:
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 7 }}
{{ if .Values.topologySpreadConstraints.enabled }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: envoy-ratelimit
{{ end }}
      volumes:
      - name: config
        configMap:
          name: envoy-ratelimit
      containers:
      - name: ratelimit
        image: {{ printf "%s:%s" .Values.image.repository .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: "USE_STATSD"
          value: "true"
        - name: "STATSD_HOST"
          value: "127.0.0.1"
        - name: "STATSD_PORT"
          value: "9125"
        - name: "LOG_LEVEL"
          value: "info"
        - name: "REDIS_SOCKET_TYPE"
          value: "tcp"
        - name: "REDIS_URL"
          value: {{ .Values.redisURL | quote }}
        - name: "RUNTIME_ROOT"
          value: "/data"
        - name: "RUNTIME_SUBDIRECTORY"
          value: "ratelimit"
        - name: "RUNTIME_IGNOREDOTFILES"
          value: "true"
{{- if .Values.redis.enabled }}
        command:
        - /bin/sh
        - -c
        - |
          set -ex
          while ! nc -z 127.0.0.1 6379; do
            echo wait for redis...
            sleep 1
          done
          ratelimit
{{- end }}
        volumeMounts:
        - name: config
          mountPath: /data/ratelimit
        resources:
{{ toYaml .Values.resources | indent 9 }}
        ports:
        - containerPort: 8081 # grpc
        - containerPort: 8080 # http
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
{{- if .Values.redis.enabled }}
      - name: redis
        image: {{ printf "%s:%s" .Values.redis.image.repository .Values.redis.image.tag }}
        imagePullPolicy: {{ .Values.redis.image.pullPolicy}}
        resources:
{{ toYaml .Values.redis.resources | indent 9 }}
        ports:
        - containerPort: 6379
{{- end }}
      - name: statsd
        image: {{ printf "%s:%s" .Values.statsd.image.repository .Values.statsd.image.tag }}
        imagePullPolicy: {{ .Values.statsd.image.pullPolicy}}
        resources:
{{ toYaml .Values.statsd.resources | indent 9 }}
        ports:
        - containerPort: 9102
---
apiVersion: v1
kind: Service
metadata:
  name: envoy-ratelimit
  labels:
    app: envoy-ratelimit
spec:
  type: ClusterIP
  ports:
  - name: grpc
    port: 8080
    protocol: TCP
  - name: http
    port: 8081
    protocol: TCP
  selector:
    app: envoy-ratelimit