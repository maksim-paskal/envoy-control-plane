layered_runtime:
  layers:
  - name: static_layer_0
    static_layer:
      overload:
        global_downstream_max_connections: 50000

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 18000

static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 15001
    use_original_dst: true
    traffic_direction: OUTBOUND
    filter_chains:
    - filters:
        - name: envoy.filters.network.tcp_proxy
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
            stat_prefix: egress_blackbox
            cluster: egress_blackbox
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    traffic_direction: OUTBOUND
    bind_to_port: false
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: egress_http
          http_protocol_options:
            accept_http_10: true
          route_config:
            name: egress_http
            virtual_hosts:
            - name: egress_http
              domains:
              - "*"
              response_headers_to_add:
              - header:
                  key: "x-test1"
                  value: "test1"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: egress_http
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    traffic_direction: OUTBOUND
    bind_to_port: false
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: egress_https
          http_protocol_options:
            accept_http_10: true
          route_config:
            name: egress_https
            virtual_hosts:
            - name: egress_https
              domains:
              - "*"
              response_headers_to_add:
              - header:
                  key: "x-test2"
                  value: "test2"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: egress_https
          http_filters:
          - name: 
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: /envoy/server.crt
              private_key:
                filename: /envoy/server.key

  clusters:
  - name: egress_blackbox
    type: ORIGINAL_DST
    lb_policy: CLUSTER_PROVIDED

  - name: egress_http
    type: ORIGINAL_DST
    lb_policy: CLUSTER_PROVIDED

  - name: egress_https
    type: ORIGINAL_DST
    lb_policy: CLUSTER_PROVIDED
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        upstream_http_protocol_options:
          auto_sni: true
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext